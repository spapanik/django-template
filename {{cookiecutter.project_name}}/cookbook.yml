$globals:
  shell: bash
  vars:
    - settings_file: src/settings/local.py
    - settings: settings.local
    - env_vars: DJANGO_SETTINGS_MODULE=${settings}
    - admin: ${env_vars} django-admin
    - db_name: '{{cookiecutter.project_name}}'
    - css_style: expanded
    - css_map: --no-source-map
    - static_verbosity: '0'
    - input: --no-input
    - interactive: --non-interactive
    - scss_files: $((glob **/static/*/css/*.scss))
    - css_files: $((change_suffix ${scss_files} .css))
    - po_files: $((glob locale/**/LC_MESSAGES/django.po))
    - mo_files: $((change_suffix ${po_files} .mo))
    - env_file: ./env.toml
    - use_env: $((ternary_if '$((exists ./${env_file}))' '-o ${env_file}' ''))
    - etc: $((sub template. local. '$((glob etc/**/*template.*))'))
    - migration_dirs: $((glob src/**/migrations))
    - configuration: $((merge ${etc} ${settings_file}))
all:
  alias: install
update:
  alias: install
install:
  phony: true
  keep_ts: true
  requires:
    - install_py
    - configuration
    - db
    - migrations
    - static
    - translations
install_py:
  phony: true
  keep_ts: true
  requires:
    - poetry.lock
  commands:
    - poetry install ${poetry_extra}
format:
  phony: true
  requires:
    - install_py
  commands:
    - isort .
    - black .
lint:
  phony: true
  requires:
    - install_py
  commands:
    - isort --check .
    - black --check .
    - flake8 .
    - mypy .
    - ${admin} makemigrations --check --dry-run
tests:
  phony: true
  requires:
    - install
  commands:
    - ${env_vars} pytest ${pytest_args} ${pytest_path}
poetry.lock:
  requires:
    - pyproject.toml
  commands:
    - poetry lock && touch ${.target}
db:
  phony: true
  keep_ts: true
  exists_only: true
  vars:
    - db_exists: SELECT EXISTS (SELECT 1 FROM pg_database WHERE datname = '${db_name}')
    - db_base: template1
  existence_command: '[ $(psql -d ${db_base} -tAXc "${db_exists}") = "t" ]'
  commands:
    - createdb ${db_name}
(?P<app_dir>.+)/migrations:
  exists_only: true
  recursive: true
migrations:
  phony: true
  keep_ts: true
  requires:
    - install_py
    - ${migration_dirs}
    - ${settings_file}
    - db
    - ${migration_dirs}
  commands:
    - ${admin} migrate ${input}
install_js:
  phony: true
  keep_ts: true
  requires:
    - yarn.lock
  commands:
    - yarn install ${interactive} ${yarn_extra}
yarn.lock:
  requires:
    - package.json
  commands:
    - yarn generate-lock-entry > ${.target}
css:
  phony: true
  requires:
    - ${css_files}
(?P<basename>.+)\.css:
  regex: true
  requires:
    - ${basename}.scss
  commands:
    - sass -s ${css_style} ${css_map} ${.requirements:0} ${.target}
staticfiles:
  phony: true
  requires:
    - install_py
    - ${settings_file}
  commands:
    - ${admin} collectstatic ${input} -v ${static_verbosity} -i "*.scss" ${static_extra}
static:
  phony: true
  requires:
    - install_js
    - css
    - staticfiles
translations:
  phony: true
  requires:
    - ${mo_files}
locale/(?P<locale>.+)/LC_MESSAGES/django.mo:
  regex: true
  requires:
    - locale/${locale}/LC_MESSAGES/django.po
  commands:
    - ${admin} compilemessages --locale=${locale}
configuration:
  phony: true
  requires:
    - ${configuration}
(?P<parent>.+)(?P<prefix>(/.*\.|/))local\.(?P<extension>.+):
  regex: true
  exists_only: true
  requires:
    - ${parent}${prefix}template.${extension}
    - install_py
  commands:
    - yashiro -st ${.requirements:0} ${use_env} > ${.target}
